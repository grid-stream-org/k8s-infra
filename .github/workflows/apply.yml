# .github/workflows/apply.yaml (renamed from deploy since we're applying manifests)
name: apply-manifests
on:
  push:
    branches: [ main ]
    paths:
      - 'versions.yaml'
      - 'k8s/**'

jobs:
  apply:
    name: apply-manifests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Authenticate to Google
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SERVICE_ACC_KEY }}"

      - uses: "google-github-actions/setup-gcloud@v2"
        with:
          install_components: "gke-gcloud-auth-plugin"

      - name: Authenticate to GKE cluster
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ secrets.GCP_GKE_CLUSTER }}
          location: ${{ secrets.GCP_REGION }}

      - name: Create Secrets
        run: |
          gcloud secrets versions access latest --secret=CREDS_PATH_SECRET | kubectl create secret generic bigquery-credentials --from-file=credentials.json=/dev/stdin --dry-run=client -o yaml | kubectl apply -f -
          gcloud secrets versions access latest --secret=BATCHER_STREAM_CONFIG_SECRET | kubectl create secret generic batcher-stream-config --from-file=config.json=/dev/stdin --dry-run=client -o yaml | kubectl apply -f -

      - name: Apply All Manifests
        run: |
          export VERSION=$(yq '.services.batcher.stream' versions.yaml)
          cd k8s/batcher/stream
          kustomize build --load-restrictor=LoadRestrictionsNone . | kubectl apply -f -
          cd ../..


# TODO
# gcloud secrets versions access latest --secret=BATCHER_CONFIG_SECRET | kubectl create secret generic batcher-config --from-file=config.json=/dev/stdin --dry-run=client -o yaml | kubectl apply -f -

# export VERSION=$(yq '.services.batcher.event' versions.yaml)
# cd k8s/batcher/event
# kustomize build --load-restrictor=LoadRestrictionsNone . | kubectl apply -f -
# cd ../..

# export VERSION=$(yq '.services.validator' versions.yaml)
# cd k8s/validator
# kustomize build --load-restrictor=LoadRestrictionsNone . | kubectl apply -f -
